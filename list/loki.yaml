apiVersion: v1
items:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: loki
    namespace: logging
- apiVersion: v1
  data:
    promtail.yaml: "\"scrape_configs\": \n- \"job_name\": \"kubernetes-pods\"\n  \"kubernetes_sd_configs\":
      \n  - \"role\": \"pod\"\n  \"relabel_configs\": \n  - \"source_labels\": \n
      \   - \"__meta_kubernetes_pod_node_name\"\n    \"target_label\": \"__host__\"\n
      \ - \"action\": \"drop\"\n    \"regex\": \"^$\"\n    \"source_labels\": \n    -
      \"__meta_kubernetes_pod_label_name\"\n  - \"action\": \"replace\"\n    \"replacement\":
      \"$1\"\n    \"separator\": \"/\"\n    \"source_labels\": \n    - \"__meta_kubernetes_namespace\"\n
      \   - \"__meta_kubernetes_pod_label_name\"\n    \"target_label\": \"job\"\n
      \ - \"action\": \"replace\"\n    \"source_labels\": \n    - \"__meta_kubernetes_namespace\"\n
      \   \"target_label\": \"namespace\"\n  - \"action\": \"replace\"\n    \"source_labels\":
      \n    - \"__meta_kubernetes_pod_name\"\n    \"target_label\": \"instance\"\n
      \ - \"action\": \"replace\"\n    \"source_labels\": \n    - \"__meta_kubernetes_pod_container_name\"\n
      \   \"target_label\": \"container_name\"\n  - \"action\": \"labelmap\"\n    \"regex\":
      \"__meta_kubernetes_pod_label_(.+)\"\n  - \"replacement\": \"/var/log/pods/$1/*.log\"\n
      \   \"separator\": \"/\"\n    \"source_labels\": \n    - \"__meta_kubernetes_pod_uid\"\n
      \   \"target_label\": \"__path__\"\n- \"job_name\": \"kubernetes-pods-app\"\n
      \ \"kubernetes_sd_configs\": \n  - \"role\": \"pod\"\n  \"relabel_configs\":
      \n  - \"source_labels\": \n    - \"__meta_kubernetes_pod_node_name\"\n    \"target_label\":
      \"__host__\"\n  - \"action\": \"drop\"\n    \"regex\": \"^$\"\n    \"source_labels\":
      \n    - \"__meta_kubernetes_pod_label_app\"\n  - \"action\": \"replace\"\n    \"replacement\":
      \"$1\"\n    \"separator\": \"/\"\n    \"source_labels\": \n    - \"__meta_kubernetes_namespace\"\n
      \   - \"__meta_kubernetes_pod_label_app\"\n    \"target_label\": \"job\"\n  -
      \"action\": \"replace\"\n    \"source_labels\": \n    - \"__meta_kubernetes_namespace\"\n
      \   \"target_label\": \"namespace\"\n  - \"action\": \"replace\"\n    \"source_labels\":
      \n    - \"__meta_kubernetes_pod_name\"\n    \"target_label\": \"instance\"\n
      \ - \"action\": \"replace\"\n    \"source_labels\": \n    - \"__meta_kubernetes_pod_container_name\"\n
      \   \"target_label\": \"container_name\"\n  - \"action\": \"labelmap\"\n    \"regex\":
      \"__meta_kubernetes_pod_label_(.+)\"\n  - \"replacement\": \"/var/log/pods/$1/*.log\"\n
      \   \"separator\": \"/\"\n    \"source_labels\": \n    - \"__meta_kubernetes_pod_uid\"\n
      \   \"target_label\": \"__path__\"\n\"server\": \n  \"log_level\": \"debug\""
  kind: ConfigMap
  metadata:
    name: promtail
    namespace: logging
- apiVersion: apps/v1beta2
  kind: DaemonSet
  metadata:
    labels:
      app: promtail
    name: promtail
    namespace: logging
  spec:
    selector:
      matchLabels:
        app: promtail
    template:
      metadata:
        labels:
          app: promtail
      spec:
        containers:
        - args:
          - -config.file=/etc/promtail/promtail.yaml
          - -client.url=http://loki.logging.svc.cluster.local:3100/api/prom/push
          env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          image: quay.io/metalmatze/promtail:20190411
          imagePullPolicy: Always
          name: promtail
          resources:
            limits:
              cpu: 250m
              memory: 180Mi
            requests:
              cpu: 50m
              memory: 60Mi
          volumeMounts:
          - mountPath: /etc/promtail
            name: config
            readOnly: false
          - mountPath: /var/log
            name: varlog
            readOnly: false
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: false
        hostPID: true
        nodeSelector:
          beta.kubernetes.io/os: linux
        serviceAccountName: loki
        volumes:
        - configMap:
            name: promtail
          name: config
        - hostPath:
            path: /var/log
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
          name: varlibdockercontainers
- apiVersion: extensions/v1beta1
  kind: PodSecurityPolicy
  metadata:
    name: promtail
    namespace: logging
  spec:
    allowPrivilegeEscalation: true
    fsGroup:
      rule: RunAsAny
    hostIPC: true
    hostNetwork: true
    hostPID: true
    privileged: true
    readOnlyRootFilesystem: false
    runAsUser:
      rule: RunAsAny
    seLinux:
      rule: RunAsAny
    supplementalGroups:
      rule: RunAsAny
    volumes:
    - secret
    - configMap
    - hostPath
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: promtail
    namespace: logging
  rules:
  - apiGroups:
    - extensions
    resourceNames:
    - promtail
    resources:
    - podsecuritypolicies
    verbs:
    - use
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: promtail
    namespace: logging
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: promtail
  subjects:
  - kind: ServiceAccount
    name: loki
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: promtail
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    - nodes/proxy
    - services
    - endpoints
    - pods
    verbs:
    - list
    - get
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: promtail
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: promtail
  subjects:
  - kind: ServiceAccount
    name: loki
    namespace: logging
- apiVersion: v1
  data:
    loki.yaml: "\"auth_enabled\": false\n\"ingester\": \n  \"chunk_idle_period\":
      \"15m\"\n  \"lifecycler\": \n    \"ring\": \n      \"replication_factor\": 1\n
      \     \"store\": \"inmemory\"\n\"limits_config\": \n  \"enforce_metric_name\":
      false\n\"schema_config\": \n  \"configs\": \n  - \"from\": 0\n    \"index\":
      \n      \"period\": \"168h\"\n      \"prefix\": \"index_\"\n    \"object_store\":
      \"filesystem\"\n    \"schema\": \"v9\"\n    \"store\": \"boltdb\"\n\"server\":
      \n  \"http_listen_port\": 3100\n  \"log_level\": \"debug\"\n\"storage_config\":
      \n  \"boltdb\": \n    \"directory\": \"/data/loki/index\"\n  \"filesystem\":
      \n    \"directory\": \"/data/loki/chunks\""
  kind: ConfigMap
  metadata:
    name: loki
    namespace: logging
- apiVersion: extensions/v1beta1
  kind: PodSecurityPolicy
  metadata:
    name: loki
    namespace: logging
  spec:
    allowPrivilegeEscalation: false
    fsGroup:
      rule: RunAsAny
    hostIPC: false
    hostNetwork: false
    hostPID: false
    privileged: false
    readOnlyRootFilesystem: false
    runAsUser:
      rule: RunAsAny
    seLinux:
      rule: RunAsAny
    supplementalGroups:
      rule: RunAsAny
    volumes:
    - configMap
    - emptyDir
    - persistentVolumeClaim
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: loki
    namespace: logging
  rules:
  - apiGroups:
    - extensions
    resourceNames:
    - loki
    resources:
    - podsecuritypolicies
    verbs:
    - use
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: loki
    namespace: logging
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: loki
  subjects:
  - kind: ServiceAccount
    name: loki
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: loki
    name: loki
    namespace: logging
  spec:
    ports:
    - name: loki
      port: 3100
      targetPort: loki
    selector:
      app: loki
- apiVersion: apps/v1beta2
  kind: Deployment
  metadata:
    labels:
      app: loki
    name: loki
    namespace: logging
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: loki
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        labels:
          app: loki
      spec:
        containers:
        - args:
          - -config.file=/etc/loki/loki.yaml
          image: quay.io/metalmatze/loki:20190411
          imagePullPolicy: Always
          name: loki
          ports:
          - containerPort: 3100
            name: loki
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 75Mi
          volumeMounts:
          - mountPath: /etc/loki
            name: config
            readOnly: false
        nodeSelector:
          beta.kubernetes.io/os: linux
        serviceAccountName: loki
        volumes:
        - configMap:
            name: loki
          name: config
kind: List
